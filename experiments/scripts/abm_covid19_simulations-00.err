>> anaconda-3-5.3.1 has been loaded.
>> python-3.8.2 has been loaded.
>> gcc-8.4.0 has been loaded.
>> openmpi-4.0.3_gcc-8.4.0 has been loaded.
>> cuda-9.0_cudnn-7.0.5 has been loaded.
>> mpich-3.3.2 has been loaded.
>> curl-7.69.1 has been loaded.
>> mpich-3.3.2 has been loaded.
>> hdf5-1.12.0 has been loaded.
>> netcdf-4.7.3 has been loaded.
>> libpng-1.6.37 has been loaded.
>> openmpi-4.0.2 has been loaded.
>> gcc-8.4.0 has been loaded.
>> scilab-6.1.0 has been loaded.
>> curl-7.69.1 has been loaded.
>> mpich-3.3.2 has been loaded.
>> hdf5-1.12.0 has been loaded.
>> curl-7.69.1 has been loaded.
>> mpich-3.3.2 has been loaded.
>> hdf5-1.12.0 has been loaded.
>> netcdf-4.7.3 has been loaded.
>> netcdf-fortran-4.5.2 has been loaded.
>> make-4.3 has been loaded.
[NbConvertApp] Converting notebook experiments/notebooks/Sensitivity Analysis on Default Scenario.ipynb to notebook
[NbConvertApp] Executing notebook with kernel: python3
[NbConvertApp] ERROR | Error while converting 'experiments/notebooks/Sensitivity Analysis on Default Scenario.ipynb'
Traceback (most recent call last):
  File "/home/joma.minoza/.local/lib/python3.8/site-packages/nbconvert/nbconvertapp.py", line 407, in export_single_notebook
    output, resources = self.exporter.from_filename(notebook_filename, resources=resources)
  File "/home/joma.minoza/.local/lib/python3.8/site-packages/nbconvert/exporters/exporter.py", line 178, in from_filename
    return self.from_file(f, resources=resources, **kw)
  File "/home/joma.minoza/.local/lib/python3.8/site-packages/nbconvert/exporters/exporter.py", line 196, in from_file
    return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw)
  File "/home/joma.minoza/.local/lib/python3.8/site-packages/nbconvert/exporters/notebook.py", line 32, in from_notebook_node
    nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw)
  File "/home/joma.minoza/.local/lib/python3.8/site-packages/nbconvert/exporters/exporter.py", line 138, in from_notebook_node
    nb_copy, resources = self._preprocess(nb_copy, resources)
  File "/home/joma.minoza/.local/lib/python3.8/site-packages/nbconvert/exporters/exporter.py", line 315, in _preprocess
    nbc, resc = preprocessor(nbc, resc)
  File "/home/joma.minoza/.local/lib/python3.8/site-packages/nbconvert/preprocessors/base.py", line 47, in __call__
    return self.preprocess(nb, resources)
  File "/home/joma.minoza/.local/lib/python3.8/site-packages/nbconvert/preprocessors/execute.py", line 354, in preprocess
    nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources)
  File "/home/joma.minoza/.local/lib/python3.8/site-packages/nbconvert/preprocessors/base.py", line 69, in preprocess
    nb.cells[index], resources = self.preprocess_cell(cell, resources, index)
  File "/home/joma.minoza/.local/lib/python3.8/site-packages/nbconvert/preprocessors/execute.py", line 378, in preprocess_cell
    raise CellExecutionError.from_cell_and_msg(cell, out)
nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:
------------------
simulation_model        = GeoSimulationEnvironment
center_coords           = [5.986803, 122.1695733]
locations               = ["BASILAN", "LANAO DEL SUR", "MAGUINDANAO", "SULU", "TAWI-TAWI"]
age_distributions       = [
                            1037200,   # 0 - 9 
                            931800,    # 10 - 19 
                            725000,    # 20 - 29 
                            629100,    # 30 - 39
                            453200,    # 40 - 49
                            296000,    # 50 - 59
                            173700,    # 60 - 69
                            68800,     # 70 - 79
                            15500      # 80 and up
                        ]

population              = [
                            385300,         # Basilan
                            1225700,        # Lanao Del Sur
                            1391100,        # Maguindanao
                            839500,         # Sulu
                            489100          # Tawi-Tawi
                        ]

vaccine_prioritization_weights = {
    "person_health_social_work":        [0.10, 0.32, 0.09, 0.37, 0.11],
    "person_prof_tech":                 [0.06, 0.37, 0.37, 0.12, 0.10],
    "person_admin_support":             [0.01, 0.75, 0.08, 0.10, 0.06],
    "person_education":                 [0.03, 0.77, 0.12, 0.04, 0.05],
    "person_agriculture":               [0.10, 0.75, 0.06, 0.06, 0.03],
    "elderly":                          [0.09, 0.28, 0.32, 0.19, 0.11],
    "social_household_4ps_active":      [0.066, 0.239, 0.306, 0.330, 0.059],
    "social_bayanihan_grant":           [0.08, 0.33, 0.31, 0.17, 0.11],
    "economics_tourists":               [0.1352, 0.1919, 0.3569, 0.0004, 0.3156],
    "economics_marine_fisheries":       [0.03, 0.23, 0.16, 0.13, 0.45],
    "economics_volume_fisheries":       [0.02, 0.02, 0.16, 0.36, 0.44],
    "economics_livestock_inventory":    [0.28, 0.31, 0.24, 0.10, 0.06],
    "economics_volume_corn":            [0.00009, 0.33832, 0.65840, 0.00129, 0.00189]
}

performance_factor       = 0.01
scale                    = 1000 * performance_factor  
vaccines_available       = 5000 / performance_factor # times scale (actual number for vaccine doses) 

data_manager            = DataManager(DATA_DROP_CSV_FILE, BARMM_DATA_LOC, "ProvRes", locations, age_distributions)
environment             = GeoSpaceEnvironment(simulation_model, BARMM_GEOJSON, "PROVINCE", locations, center_coords, population, data_manager, "ProvRes", vaccine_prioritization_weights, vaccines_available)
environment.scale       = scale

simulation_model.grid   = environment.get_geospace()
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mValueError[0m                                Traceback (most recent call last)
[0;32m<ipython-input-2-16db8b426ef1>[0m in [0;36m<module>[0;34m[0m
[1;32m     43[0m [0;34m[0m[0m
[1;32m     44[0m [0mdata_manager[0m            [0;34m=[0m [0mDataManager[0m[0;34m([0m[0mDATA_DROP_CSV_FILE[0m[0;34m,[0m [0mBARMM_DATA_LOC[0m[0;34m,[0m [0;34m"ProvRes"[0m[0;34m,[0m [0mlocations[0m[0;34m,[0m [0mage_distributions[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 45[0;31m [0menvironment[0m             [0;34m=[0m [0mGeoSpaceEnvironment[0m[0;34m([0m[0msimulation_model[0m[0;34m,[0m [0mBARMM_GEOJSON[0m[0;34m,[0m [0;34m"PROVINCE"[0m[0;34m,[0m [0mlocations[0m[0;34m,[0m [0mcenter_coords[0m[0;34m,[0m [0mpopulation[0m[0;34m,[0m [0mdata_manager[0m[0;34m,[0m [0;34m"ProvRes"[0m[0;34m,[0m [0mvaccine_prioritization_weights[0m[0;34m,[0m [0mvaccines_available[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     46[0m [0menvironment[0m[0;34m.[0m[0mscale[0m       [0;34m=[0m [0mscale[0m[0;34m[0m[0;34m[0m[0m
[1;32m     47[0m [0;34m[0m[0m

[0;32m/scratch1/scratch2/joma.minoza/Bangsamoro-ABM-COVID19-Vaccine-Distribution-Optimization/experiments/notebooks/../../abm/space/geospace/geo_space_environ.py[0m in [0;36m__init__[0;34m(self, model, geojson_file, geojson_feature_key, locations, center_coords, population, data_manager, location_filter, vaccine_prioritization_weights, vaccines_available, scale)[0m
[1;32m     51[0m         [0mself[0m[0;34m.[0m[0mpopulate_data[0m[0;34m([0m[0mself[0m[0;34m.[0m[0mget_data_source[0m[0;34m([0m[0;34m)[0m[0;34m,[0m [0mlocation_filter[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     52[0m [0;34m[0m[0m
[0;32m---> 53[0;31m         [0mself[0m[0;34m.[0m[0mupdate_mortality_rates[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     54[0m         [0mself[0m[0;34m.[0m[0mupdate_infection_rates[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     55[0m [0;34m[0m[0m

[0;32m/scratch1/scratch2/joma.minoza/Bangsamoro-ABM-COVID19-Vaccine-Distribution-Optimization/experiments/notebooks/../../abm/space/geospace/geo_space_environ.py[0m in [0;36mupdate_mortality_rates[0;34m(self)[0m
[1;32m    259[0m [0;34m[0m[0m
[1;32m    260[0m     [0;32mdef[0m [0mupdate_mortality_rates[0m[0;34m([0m[0mself[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 261[0;31m         [0mself[0m[0;34m.[0m[0mmortality_rates[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mdata_manager[0m[0;34m.[0m[0mupdate_mortality_rate[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    262[0m         [0;32mreturn[0m [0;32mTrue[0m[0;34m[0m[0;34m[0m[0m
[1;32m    263[0m [0;34m[0m[0m

[0;32m/scratch1/scratch2/joma.minoza/Bangsamoro-ABM-COVID19-Vaccine-Distribution-Optimization/experiments/notebooks/../../abm/utils/modules/data_manager.py[0m in [0;36mupdate_mortality_rate[0;34m(self)[0m
[1;32m     71[0m     [0;32mdef[0m [0mupdate_mortality_rate[0m[0;34m([0m[0mself[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     72[0m [0;34m[0m[0m
[0;32m---> 73[0;31m         [0mcase_fatality_age_group[0m [0;34m=[0m [0mcase_fatality_age_group_values[0m[0;34m([0m[0mself[0m[0;34m.[0m[0mdata[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     74[0m [0;34m[0m[0m
[1;32m     75[0m         [0mmortality_rates[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0minput_parameters[0m[0;34m[[0m[0;34m"MORTALITY_RATE"[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m

[0;32m/scratch1/scratch2/joma.minoza/Bangsamoro-ABM-COVID19-Vaccine-Distribution-Optimization/experiments/notebooks/../../abm/utils/modules/age_group_extractor.py[0m in [0;36mcase_fatality_age_group_values[0;34m(data)[0m
[1;32m     55[0m [0;32mdef[0m [0mcase_fatality_age_group_values[0m[0;34m([0m[0mdata[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     56[0m [0;34m[0m[0m
[0;32m---> 57[0;31m     [0minfected_df[0m          [0;34m=[0m [0mage_group_extractor[0m[0;34m([0m[0mdata[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     58[0m [0;34m[0m[0m
[1;32m     59[0m     [0mmortality_df[0m         [0;34m=[0m [0minfected_df[0m [0;34m*[0m [0;36m0[0m[0;34m[0m[0;34m[0m[0m

[0;32m/scratch1/scratch2/joma.minoza/Bangsamoro-ABM-COVID19-Vaccine-Distribution-Optimization/experiments/notebooks/../../abm/utils/modules/age_group_extractor.py[0m in [0;36mage_group_extractor[0;34m(data)[0m
[1;32m     10[0m     })
[1;32m     11[0m [0;34m[0m[0m
[0;32m---> 12[0;31m     [0mdf[0m[0;34m.[0m[0mindex[0m [0;34m=[0m [0midx[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     13[0m     [0mdf[0m[0;34m.[0m[0msort_index[0m[0;34m([0m[0minplace[0m[0;34m=[0m[0;32mTrue[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     14[0m     [0mdf[0m[0;34m.[0m[0mindex[0m [0;34m=[0m [0mx[0m[0;34m.[0m[0mindex[0m[0;34m[[0m[0mnp[0m[0;34m.[0m[0margsort[0m[0;34m([0m[0midx[0m[0;34m)[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m

[0;32m~/.local/lib/python3.8/site-packages/pandas/core/generic.py[0m in [0;36m__setattr__[0;34m(self, name, value)[0m
[1;32m   5078[0m         [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m   5079[0m             [0mobject[0m[0;34m.[0m[0m__getattribute__[0m[0;34m([0m[0mself[0m[0;34m,[0m [0mname[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 5080[0;31m             [0;32mreturn[0m [0mobject[0m[0;34m.[0m[0m__setattr__[0m[0;34m([0m[0mself[0m[0;34m,[0m [0mname[0m[0;34m,[0m [0mvalue[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   5081[0m         [0;32mexcept[0m [0mAttributeError[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m   5082[0m             [0;32mpass[0m[0;34m[0m[0;34m[0m[0m

[0;32mpandas/_libs/properties.pyx[0m in [0;36mpandas._libs.properties.AxisProperty.__set__[0;34m()[0m

[0;32m~/.local/lib/python3.8/site-packages/pandas/core/generic.py[0m in [0;36m_set_axis[0;34m(self, axis, labels)[0m
[1;32m    636[0m [0;34m[0m[0m
[1;32m    637[0m     [0;32mdef[0m [0m_set_axis[0m[0;34m([0m[0mself[0m[0;34m,[0m [0maxis[0m[0;34m,[0m [0mlabels[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 638[0;31m         [0mself[0m[0;34m.[0m[0m_data[0m[0;34m.[0m[0mset_axis[0m[0;34m([0m[0maxis[0m[0;34m,[0m [0mlabels[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    639[0m         [0mself[0m[0;34m.[0m[0m_clear_item_cache[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    640[0m [0;34m[0m[0m

[0;32m~/.local/lib/python3.8/site-packages/pandas/core/internals/managers.py[0m in [0;36mset_axis[0;34m(self, axis, new_labels)[0m
[1;32m    151[0m [0;34m[0m[0m
[1;32m    152[0m         [0;32mif[0m [0mnew_len[0m [0;34m!=[0m [0mold_len[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 153[0;31m             raise ValueError(
[0m[1;32m    154[0m                 [0;34m'Length mismatch: Expected axis has {old} elements, new '[0m[0;34m[0m[0;34m[0m[0m
[1;32m    155[0m                 'values have {new} elements'.format(old=old_len, new=new_len))

[0;31mValueError[0m: Length mismatch: Expected axis has 14 elements, new values have 17 elements
ValueError: Length mismatch: Expected axis has 14 elements, new values have 17 elements

srun: error: saliksik-cpu-23: task 0: Exited with exit code 1
[NbConvertApp] Converting notebook experiments/notebooks/Sensitivity Analysis on Default Vaccination.ipynb to notebook
[NbConvertApp] Executing notebook with kernel: python3
[NbConvertApp] ERROR | Error while converting 'experiments/notebooks/Sensitivity Analysis on Default Vaccination.ipynb'
Traceback (most recent call last):
  File "/home/joma.minoza/.local/lib/python3.8/site-packages/nbconvert/nbconvertapp.py", line 407, in export_single_notebook
    output, resources = self.exporter.from_filename(notebook_filename, resources=resources)
  File "/home/joma.minoza/.local/lib/python3.8/site-packages/nbconvert/exporters/exporter.py", line 178, in from_filename
    return self.from_file(f, resources=resources, **kw)
  File "/home/joma.minoza/.local/lib/python3.8/site-packages/nbconvert/exporters/exporter.py", line 196, in from_file
    return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw)
  File "/home/joma.minoza/.local/lib/python3.8/site-packages/nbconvert/exporters/notebook.py", line 32, in from_notebook_node
    nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw)
  File "/home/joma.minoza/.local/lib/python3.8/site-packages/nbconvert/exporters/exporter.py", line 138, in from_notebook_node
    nb_copy, resources = self._preprocess(nb_copy, resources)
  File "/home/joma.minoza/.local/lib/python3.8/site-packages/nbconvert/exporters/exporter.py", line 315, in _preprocess
    nbc, resc = preprocessor(nbc, resc)
  File "/home/joma.minoza/.local/lib/python3.8/site-packages/nbconvert/preprocessors/base.py", line 47, in __call__
    return self.preprocess(nb, resources)
  File "/home/joma.minoza/.local/lib/python3.8/site-packages/nbconvert/preprocessors/execute.py", line 354, in preprocess
    nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources)
  File "/home/joma.minoza/.local/lib/python3.8/site-packages/nbconvert/preprocessors/base.py", line 69, in preprocess
    nb.cells[index], resources = self.preprocess_cell(cell, resources, index)
  File "/home/joma.minoza/.local/lib/python3.8/site-packages/nbconvert/preprocessors/execute.py", line 378, in preprocess_cell
    raise CellExecutionError.from_cell_and_msg(cell, out)
nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:
------------------
simulation_model        = GeoSimulationEnvironment
center_coords           = [5.986803, 122.1695733]
locations               = ["BASILAN", "LANAO DEL SUR", "MAGUINDANAO", "SULU", "TAWI-TAWI"]
age_distributions       = [
                            1037200,   # 0 - 9 
                            931800,    # 10 - 19 
                            725000,    # 20 - 29 
                            629100,    # 30 - 39
                            453200,    # 40 - 49
                            296000,    # 50 - 59
                            173700,    # 60 - 69
                            68800,     # 70 - 79
                            15500      # 80 and up
                        ]

population              = [
                            385300,         # Basilan
                            1225700,        # Lanao Del Sur
                            1391100,        # Maguindanao
                            839500,         # Sulu
                            489100          # Tawi-Tawi
                        ]

vaccine_prioritization_weights = {
    "person_health_social_work":        [0.10, 0.32, 0.09, 0.37, 0.11],
    "person_prof_tech":                 [0.06, 0.37, 0.37, 0.12, 0.10],
    "person_admin_support":             [0.01, 0.75, 0.08, 0.10, 0.06],
    "person_education":                 [0.03, 0.77, 0.12, 0.04, 0.05],
    "person_agriculture":               [0.10, 0.75, 0.06, 0.06, 0.03],
    "elderly":                          [0.09, 0.28, 0.32, 0.19, 0.11],
    "social_household_4ps_active":      [0.066, 0.239, 0.306, 0.330, 0.059],
    "social_bayanihan_grant":           [0.08, 0.33, 0.31, 0.17, 0.11],
    "economics_tourists":               [0.1352, 0.1919, 0.3569, 0.0004, 0.3156],
    "economics_marine_fisheries":       [0.03, 0.23, 0.16, 0.13, 0.45],
    "economics_volume_fisheries":       [0.02, 0.02, 0.16, 0.36, 0.44],
    "economics_livestock_inventory":    [0.28, 0.31, 0.24, 0.10, 0.06],
    "economics_volume_corn":            [0.00009, 0.33832, 0.65840, 0.00129, 0.00189]
}

performance_factor       = 0.01
scale                    = 1000 * performance_factor  
vaccines_available       = 5000 / performance_factor # times scale (actual number for vaccine doses) 

data_manager            = DataManager(DATA_DROP_CSV_FILE, BARMM_DATA_LOC, "ProvRes", locations, age_distributions)
environment             = GeoSpaceEnvironment(simulation_model, BARMM_GEOJSON, "PROVINCE", locations, center_coords, population, data_manager, "ProvRes", vaccine_prioritization_weights, vaccines_available)
environment.scale       = scale

simulation_model.grid   = environment.get_geospace()
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mValueError[0m                                Traceback (most recent call last)
[0;32m<ipython-input-2-16db8b426ef1>[0m in [0;36m<module>[0;34m[0m
[1;32m     43[0m [0;34m[0m[0m
[1;32m     44[0m [0mdata_manager[0m            [0;34m=[0m [0mDataManager[0m[0;34m([0m[0mDATA_DROP_CSV_FILE[0m[0;34m,[0m [0mBARMM_DATA_LOC[0m[0;34m,[0m [0;34m"ProvRes"[0m[0;34m,[0m [0mlocations[0m[0;34m,[0m [0mage_distributions[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 45[0;31m [0menvironment[0m             [0;34m=[0m [0mGeoSpaceEnvironment[0m[0;34m([0m[0msimulation_model[0m[0;34m,[0m [0mBARMM_GEOJSON[0m[0;34m,[0m [0;34m"PROVINCE"[0m[0;34m,[0m [0mlocations[0m[0;34m,[0m [0mcenter_coords[0m[0;34m,[0m [0mpopulation[0m[0;34m,[0m [0mdata_manager[0m[0;34m,[0m [0;34m"ProvRes"[0m[0;34m,[0m [0mvaccine_prioritization_weights[0m[0;34m,[0m [0mvaccines_available[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     46[0m [0menvironment[0m[0;34m.[0m[0mscale[0m       [0;34m=[0m [0mscale[0m[0;34m[0m[0;34m[0m[0m
[1;32m     47[0m [0;34m[0m[0m

[0;32m/scratch1/scratch2/joma.minoza/Bangsamoro-ABM-COVID19-Vaccine-Distribution-Optimization/experiments/notebooks/../../abm/space/geospace/geo_space_environ.py[0m in [0;36m__init__[0;34m(self, model, geojson_file, geojson_feature_key, locations, center_coords, population, data_manager, location_filter, vaccine_prioritization_weights, vaccines_available, scale)[0m
[1;32m     51[0m         [0mself[0m[0;34m.[0m[0mpopulate_data[0m[0;34m([0m[0mself[0m[0;34m.[0m[0mget_data_source[0m[0;34m([0m[0;34m)[0m[0;34m,[0m [0mlocation_filter[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     52[0m [0;34m[0m[0m
[0;32m---> 53[0;31m         [0mself[0m[0;34m.[0m[0mupdate_mortality_rates[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     54[0m         [0mself[0m[0;34m.[0m[0mupdate_infection_rates[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     55[0m [0;34m[0m[0m

[0;32m/scratch1/scratch2/joma.minoza/Bangsamoro-ABM-COVID19-Vaccine-Distribution-Optimization/experiments/notebooks/../../abm/space/geospace/geo_space_environ.py[0m in [0;36mupdate_mortality_rates[0;34m(self)[0m
[1;32m    259[0m [0;34m[0m[0m
[1;32m    260[0m     [0;32mdef[0m [0mupdate_mortality_rates[0m[0;34m([0m[0mself[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 261[0;31m         [0mself[0m[0;34m.[0m[0mmortality_rates[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mdata_manager[0m[0;34m.[0m[0mupdate_mortality_rate[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    262[0m         [0;32mreturn[0m [0;32mTrue[0m[0;34m[0m[0;34m[0m[0m
[1;32m    263[0m [0;34m[0m[0m

[0;32m/scratch1/scratch2/joma.minoza/Bangsamoro-ABM-COVID19-Vaccine-Distribution-Optimization/experiments/notebooks/../../abm/utils/modules/data_manager.py[0m in [0;36mupdate_mortality_rate[0;34m(self)[0m
[1;32m     71[0m     [0;32mdef[0m [0mupdate_mortality_rate[0m[0;34m([0m[0mself[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     72[0m [0;34m[0m[0m
[0;32m---> 73[0;31m         [0mcase_fatality_age_group[0m [0;34m=[0m [0mcase_fatality_age_group_values[0m[0;34m([0m[0mself[0m[0;34m.[0m[0mdata[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     74[0m [0;34m[0m[0m
[1;32m     75[0m         [0mmortality_rates[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0minput_parameters[0m[0;34m[[0m[0;34m"MORTALITY_RATE"[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m

[0;32m/scratch1/scratch2/joma.minoza/Bangsamoro-ABM-COVID19-Vaccine-Distribution-Optimization/experiments/notebooks/../../abm/utils/modules/age_group_extractor.py[0m in [0;36mcase_fatality_age_group_values[0;34m(data)[0m
[1;32m     55[0m [0;32mdef[0m [0mcase_fatality_age_group_values[0m[0;34m([0m[0mdata[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     56[0m [0;34m[0m[0m
[0;32m---> 57[0;31m     [0minfected_df[0m          [0;34m=[0m [0mage_group_extractor[0m[0;34m([0m[0mdata[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     58[0m [0;34m[0m[0m
[1;32m     59[0m     [0mmortality_df[0m         [0;34m=[0m [0minfected_df[0m [0;34m*[0m [0;36m0[0m[0;34m[0m[0;34m[0m[0m

[0;32m/scratch1/scratch2/joma.minoza/Bangsamoro-ABM-COVID19-Vaccine-Distribution-Optimization/experiments/notebooks/../../abm/utils/modules/age_group_extractor.py[0m in [0;36mage_group_extractor[0;34m(data)[0m
[1;32m     10[0m     })
[1;32m     11[0m [0;34m[0m[0m
[0;32m---> 12[0;31m     [0mdf[0m[0;34m.[0m[0mindex[0m [0;34m=[0m [0midx[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     13[0m     [0mdf[0m[0;34m.[0m[0msort_index[0m[0;34m([0m[0minplace[0m[0;34m=[0m[0;32mTrue[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     14[0m     [0mdf[0m[0;34m.[0m[0mindex[0m [0;34m=[0m [0mx[0m[0;34m.[0m[0mindex[0m[0;34m[[0m[0mnp[0m[0;34m.[0m[0margsort[0m[0;34m([0m[0midx[0m[0;34m)[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m

[0;32m~/.local/lib/python3.8/site-packages/pandas/core/generic.py[0m in [0;36m__setattr__[0;34m(self, name, value)[0m
[1;32m   5078[0m         [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m   5079[0m             [0mobject[0m[0;34m.[0m[0m__getattribute__[0m[0;34m([0m[0mself[0m[0;34m,[0m [0mname[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 5080[0;31m             [0;32mreturn[0m [0mobject[0m[0;34m.[0m[0m__setattr__[0m[0;34m([0m[0mself[0m[0;34m,[0m [0mname[0m[0;34m,[0m [0mvalue[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   5081[0m         [0;32mexcept[0m [0mAttributeError[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m   5082[0m             [0;32mpass[0m[0;34m[0m[0;34m[0m[0m

[0;32mpandas/_libs/properties.pyx[0m in [0;36mpandas._libs.properties.AxisProperty.__set__[0;34m()[0m

[0;32m~/.local/lib/python3.8/site-packages/pandas/core/generic.py[0m in [0;36m_set_axis[0;34m(self, axis, labels)[0m
[1;32m    636[0m [0;34m[0m[0m
[1;32m    637[0m     [0;32mdef[0m [0m_set_axis[0m[0;34m([0m[0mself[0m[0;34m,[0m [0maxis[0m[0;34m,[0m [0mlabels[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 638[0;31m         [0mself[0m[0;34m.[0m[0m_data[0m[0;34m.[0m[0mset_axis[0m[0;34m([0m[0maxis[0m[0;34m,[0m [0mlabels[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    639[0m         [0mself[0m[0;34m.[0m[0m_clear_item_cache[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    640[0m [0;34m[0m[0m

[0;32m~/.local/lib/python3.8/site-packages/pandas/core/internals/managers.py[0m in [0;36mset_axis[0;34m(self, axis, new_labels)[0m
[1;32m    151[0m [0;34m[0m[0m
[1;32m    152[0m         [0;32mif[0m [0mnew_len[0m [0;34m!=[0m [0mold_len[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 153[0;31m             raise ValueError(
[0m[1;32m    154[0m                 [0;34m'Length mismatch: Expected axis has {old} elements, new '[0m[0;34m[0m[0;34m[0m[0m
[1;32m    155[0m                 'values have {new} elements'.format(old=old_len, new=new_len))

[0;31mValueError[0m: Length mismatch: Expected axis has 14 elements, new values have 17 elements
ValueError: Length mismatch: Expected axis has 14 elements, new values have 17 elements

srun: error: saliksik-cpu-23: task 0: Exited with exit code 1
[NbConvertApp] Converting notebook experiments/notebooks/Sensitivity Analysis on Vaccination with Economic Prioritization.ipynb to notebook
[NbConvertApp] Executing notebook with kernel: python3
[NbConvertApp] ERROR | Error while converting 'experiments/notebooks/Sensitivity Analysis on Vaccination with Economic Prioritization.ipynb'
Traceback (most recent call last):
  File "/home/joma.minoza/.local/lib/python3.8/site-packages/nbconvert/nbconvertapp.py", line 407, in export_single_notebook
    output, resources = self.exporter.from_filename(notebook_filename, resources=resources)
  File "/home/joma.minoza/.local/lib/python3.8/site-packages/nbconvert/exporters/exporter.py", line 178, in from_filename
    return self.from_file(f, resources=resources, **kw)
  File "/home/joma.minoza/.local/lib/python3.8/site-packages/nbconvert/exporters/exporter.py", line 196, in from_file
    return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw)
  File "/home/joma.minoza/.local/lib/python3.8/site-packages/nbconvert/exporters/notebook.py", line 32, in from_notebook_node
    nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw)
  File "/home/joma.minoza/.local/lib/python3.8/site-packages/nbconvert/exporters/exporter.py", line 138, in from_notebook_node
    nb_copy, resources = self._preprocess(nb_copy, resources)
  File "/home/joma.minoza/.local/lib/python3.8/site-packages/nbconvert/exporters/exporter.py", line 315, in _preprocess
    nbc, resc = preprocessor(nbc, resc)
  File "/home/joma.minoza/.local/lib/python3.8/site-packages/nbconvert/preprocessors/base.py", line 47, in __call__
    return self.preprocess(nb, resources)
  File "/home/joma.minoza/.local/lib/python3.8/site-packages/nbconvert/preprocessors/execute.py", line 354, in preprocess
    nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources)
  File "/home/joma.minoza/.local/lib/python3.8/site-packages/nbconvert/preprocessors/base.py", line 69, in preprocess
    nb.cells[index], resources = self.preprocess_cell(cell, resources, index)
  File "/home/joma.minoza/.local/lib/python3.8/site-packages/nbconvert/preprocessors/execute.py", line 378, in preprocess_cell
    raise CellExecutionError.from_cell_and_msg(cell, out)
nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:
------------------
simulation_model        = GeoSimulationEnvironment
center_coords           = [5.986803, 122.1695733]
locations               = ["BASILAN", "LANAO DEL SUR", "MAGUINDANAO", "SULU", "TAWI-TAWI"]
age_distributions       = [
                            1037200,   # 0 - 9 
                            931800,    # 10 - 19 
                            725000,    # 20 - 29 
                            629100,    # 30 - 39
                            453200,    # 40 - 49
                            296000,    # 50 - 59
                            173700,    # 60 - 69
                            68800,     # 70 - 79
                            15500      # 80 and up
                        ]

population              = [
                            385300,         # Basilan
                            1225700,        # Lanao Del Sur
                            1391100,        # Maguindanao
                            839500,         # Sulu
                            489100          # Tawi-Tawi
                        ]

vaccine_prioritization_weights = {
    "person_health_social_work":        [0.10, 0.32, 0.09, 0.37, 0.11],
    "person_prof_tech":                 [0.06, 0.37, 0.37, 0.12, 0.10],
    "person_admin_support":             [0.01, 0.75, 0.08, 0.10, 0.06],
    "person_education":                 [0.03, 0.77, 0.12, 0.04, 0.05],
    "person_agriculture":               [0.10, 0.75, 0.06, 0.06, 0.03],
    "elderly":                          [0.09, 0.28, 0.32, 0.19, 0.11],
    "social_household_4ps_active":      [0.066, 0.239, 0.306, 0.330, 0.059],
    "social_bayanihan_grant":           [0.08, 0.33, 0.31, 0.17, 0.11],
    "economics_tourists":               [0.1352, 0.1919, 0.3569, 0.0004, 0.3156],
    "economics_marine_fisheries":       [0.03, 0.23, 0.16, 0.13, 0.45],
    "economics_volume_fisheries":       [0.02, 0.02, 0.16, 0.36, 0.44],
    "economics_livestock_inventory":    [0.28, 0.31, 0.24, 0.10, 0.06],
    "economics_volume_corn":            [0.00009, 0.33832, 0.65840, 0.00129, 0.00189]
}

performance_factor       = 0.01
scale                    = 1000 * performance_factor  
vaccines_available       = 5000 / performance_factor # times scale (actual number for vaccine doses) 

data_manager            = DataManager(DATA_DROP_CSV_FILE, BARMM_DATA_LOC, "ProvRes", locations, age_distributions)
environment             = GeoSpaceEnvironment(simulation_model, BARMM_GEOJSON, "PROVINCE", locations, center_coords, population, data_manager, "ProvRes", vaccine_prioritization_weights, vaccines_available)
environment.scale       = scale

simulation_model.grid   = environment.get_geospace()
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mValueError[0m                                Traceback (most recent call last)
[0;32m<ipython-input-2-16db8b426ef1>[0m in [0;36m<module>[0;34m[0m
[1;32m     43[0m [0;34m[0m[0m
[1;32m     44[0m [0mdata_manager[0m            [0;34m=[0m [0mDataManager[0m[0;34m([0m[0mDATA_DROP_CSV_FILE[0m[0;34m,[0m [0mBARMM_DATA_LOC[0m[0;34m,[0m [0;34m"ProvRes"[0m[0;34m,[0m [0mlocations[0m[0;34m,[0m [0mage_distributions[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 45[0;31m [0menvironment[0m             [0;34m=[0m [0mGeoSpaceEnvironment[0m[0;34m([0m[0msimulation_model[0m[0;34m,[0m [0mBARMM_GEOJSON[0m[0;34m,[0m [0;34m"PROVINCE"[0m[0;34m,[0m [0mlocations[0m[0;34m,[0m [0mcenter_coords[0m[0;34m,[0m [0mpopulation[0m[0;34m,[0m [0mdata_manager[0m[0;34m,[0m [0;34m"ProvRes"[0m[0;34m,[0m [0mvaccine_prioritization_weights[0m[0;34m,[0m [0mvaccines_available[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     46[0m [0menvironment[0m[0;34m.[0m[0mscale[0m       [0;34m=[0m [0mscale[0m[0;34m[0m[0;34m[0m[0m
[1;32m     47[0m [0;34m[0m[0m

[0;32m/scratch1/scratch2/joma.minoza/Bangsamoro-ABM-COVID19-Vaccine-Distribution-Optimization/experiments/notebooks/../../abm/space/geospace/geo_space_environ.py[0m in [0;36m__init__[0;34m(self, model, geojson_file, geojson_feature_key, locations, center_coords, population, data_manager, location_filter, vaccine_prioritization_weights, vaccines_available, scale)[0m
[1;32m     51[0m         [0mself[0m[0;34m.[0m[0mpopulate_data[0m[0;34m([0m[0mself[0m[0;34m.[0m[0mget_data_source[0m[0;34m([0m[0;34m)[0m[0;34m,[0m [0mlocation_filter[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     52[0m [0;34m[0m[0m
[0;32m---> 53[0;31m         [0mself[0m[0;34m.[0m[0mupdate_mortality_rates[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     54[0m         [0mself[0m[0;34m.[0m[0mupdate_infection_rates[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     55[0m [0;34m[0m[0m

[0;32m/scratch1/scratch2/joma.minoza/Bangsamoro-ABM-COVID19-Vaccine-Distribution-Optimization/experiments/notebooks/../../abm/space/geospace/geo_space_environ.py[0m in [0;36mupdate_mortality_rates[0;34m(self)[0m
[1;32m    259[0m [0;34m[0m[0m
[1;32m    260[0m     [0;32mdef[0m [0mupdate_mortality_rates[0m[0;34m([0m[0mself[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 261[0;31m         [0mself[0m[0;34m.[0m[0mmortality_rates[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mdata_manager[0m[0;34m.[0m[0mupdate_mortality_rate[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    262[0m         [0;32mreturn[0m [0;32mTrue[0m[0;34m[0m[0;34m[0m[0m
[1;32m    263[0m [0;34m[0m[0m

[0;32m/scratch1/scratch2/joma.minoza/Bangsamoro-ABM-COVID19-Vaccine-Distribution-Optimization/experiments/notebooks/../../abm/utils/modules/data_manager.py[0m in [0;36mupdate_mortality_rate[0;34m(self)[0m
[1;32m     71[0m     [0;32mdef[0m [0mupdate_mortality_rate[0m[0;34m([0m[0mself[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     72[0m [0;34m[0m[0m
[0;32m---> 73[0;31m         [0mcase_fatality_age_group[0m [0;34m=[0m [0mcase_fatality_age_group_values[0m[0;34m([0m[0mself[0m[0;34m.[0m[0mdata[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     74[0m [0;34m[0m[0m
[1;32m     75[0m         [0mmortality_rates[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0minput_parameters[0m[0;34m[[0m[0;34m"MORTALITY_RATE"[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m

[0;32m/scratch1/scratch2/joma.minoza/Bangsamoro-ABM-COVID19-Vaccine-Distribution-Optimization/experiments/notebooks/../../abm/utils/modules/age_group_extractor.py[0m in [0;36mcase_fatality_age_group_values[0;34m(data)[0m
[1;32m     55[0m [0;32mdef[0m [0mcase_fatality_age_group_values[0m[0;34m([0m[0mdata[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     56[0m [0;34m[0m[0m
[0;32m---> 57[0;31m     [0minfected_df[0m          [0;34m=[0m [0mage_group_extractor[0m[0;34m([0m[0mdata[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     58[0m [0;34m[0m[0m
[1;32m     59[0m     [0mmortality_df[0m         [0;34m=[0m [0minfected_df[0m [0;34m*[0m [0;36m0[0m[0;34m[0m[0;34m[0m[0m

[0;32m/scratch1/scratch2/joma.minoza/Bangsamoro-ABM-COVID19-Vaccine-Distribution-Optimization/experiments/notebooks/../../abm/utils/modules/age_group_extractor.py[0m in [0;36mage_group_extractor[0;34m(data)[0m
[1;32m     10[0m     })
[1;32m     11[0m [0;34m[0m[0m
[0;32m---> 12[0;31m     [0mdf[0m[0;34m.[0m[0mindex[0m [0;34m=[0m [0midx[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     13[0m     [0mdf[0m[0;34m.[0m[0msort_index[0m[0;34m([0m[0minplace[0m[0;34m=[0m[0;32mTrue[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     14[0m     [0mdf[0m[0;34m.[0m[0mindex[0m [0;34m=[0m [0mx[0m[0;34m.[0m[0mindex[0m[0;34m[[0m[0mnp[0m[0;34m.[0m[0margsort[0m[0;34m([0m[0midx[0m[0;34m)[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m

[0;32m~/.local/lib/python3.8/site-packages/pandas/core/generic.py[0m in [0;36m__setattr__[0;34m(self, name, value)[0m
[1;32m   5078[0m         [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m   5079[0m             [0mobject[0m[0;34m.[0m[0m__getattribute__[0m[0;34m([0m[0mself[0m[0;34m,[0m [0mname[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 5080[0;31m             [0;32mreturn[0m [0mobject[0m[0;34m.[0m[0m__setattr__[0m[0;34m([0m[0mself[0m[0;34m,[0m [0mname[0m[0;34m,[0m [0mvalue[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   5081[0m         [0;32mexcept[0m [0mAttributeError[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m   5082[0m             [0;32mpass[0m[0;34m[0m[0;34m[0m[0m

[0;32mpandas/_libs/properties.pyx[0m in [0;36mpandas._libs.properties.AxisProperty.__set__[0;34m()[0m

[0;32m~/.local/lib/python3.8/site-packages/pandas/core/generic.py[0m in [0;36m_set_axis[0;34m(self, axis, labels)[0m
[1;32m    636[0m [0;34m[0m[0m
[1;32m    637[0m     [0;32mdef[0m [0m_set_axis[0m[0;34m([0m[0mself[0m[0;34m,[0m [0maxis[0m[0;34m,[0m [0mlabels[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 638[0;31m         [0mself[0m[0;34m.[0m[0m_data[0m[0;34m.[0m[0mset_axis[0m[0;34m([0m[0maxis[0m[0;34m,[0m [0mlabels[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    639[0m         [0mself[0m[0;34m.[0m[0m_clear_item_cache[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    640[0m [0;34m[0m[0m

[0;32m~/.local/lib/python3.8/site-packages/pandas/core/internals/managers.py[0m in [0;36mset_axis[0;34m(self, axis, new_labels)[0m
[1;32m    151[0m [0;34m[0m[0m
[1;32m    152[0m         [0;32mif[0m [0mnew_len[0m [0;34m!=[0m [0mold_len[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 153[0;31m             raise ValueError(
[0m[1;32m    154[0m                 [0;34m'Length mismatch: Expected axis has {old} elements, new '[0m[0;34m[0m[0;34m[0m[0m
[1;32m    155[0m                 'values have {new} elements'.format(old=old_len, new=new_len))

[0;31mValueError[0m: Length mismatch: Expected axis has 14 elements, new values have 17 elements
ValueError: Length mismatch: Expected axis has 14 elements, new values have 17 elements

srun: error: saliksik-cpu-23: task 0: Exited with exit code 1
[NbConvertApp] Converting notebook experiments/notebooks/Sensitivity Analysis on Vaccination with Elderly Prioritization.ipynb to notebook
[NbConvertApp] Executing notebook with kernel: python3
[NbConvertApp] ERROR | Error while converting 'experiments/notebooks/Sensitivity Analysis on Vaccination with Elderly Prioritization.ipynb'
Traceback (most recent call last):
  File "/home/joma.minoza/.local/lib/python3.8/site-packages/nbconvert/nbconvertapp.py", line 407, in export_single_notebook
    output, resources = self.exporter.from_filename(notebook_filename, resources=resources)
  File "/home/joma.minoza/.local/lib/python3.8/site-packages/nbconvert/exporters/exporter.py", line 178, in from_filename
    return self.from_file(f, resources=resources, **kw)
  File "/home/joma.minoza/.local/lib/python3.8/site-packages/nbconvert/exporters/exporter.py", line 196, in from_file
    return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw)
  File "/home/joma.minoza/.local/lib/python3.8/site-packages/nbconvert/exporters/notebook.py", line 32, in from_notebook_node
    nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw)
  File "/home/joma.minoza/.local/lib/python3.8/site-packages/nbconvert/exporters/exporter.py", line 138, in from_notebook_node
    nb_copy, resources = self._preprocess(nb_copy, resources)
  File "/home/joma.minoza/.local/lib/python3.8/site-packages/nbconvert/exporters/exporter.py", line 315, in _preprocess
    nbc, resc = preprocessor(nbc, resc)
  File "/home/joma.minoza/.local/lib/python3.8/site-packages/nbconvert/preprocessors/base.py", line 47, in __call__
    return self.preprocess(nb, resources)
  File "/home/joma.minoza/.local/lib/python3.8/site-packages/nbconvert/preprocessors/execute.py", line 354, in preprocess
    nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources)
  File "/home/joma.minoza/.local/lib/python3.8/site-packages/nbconvert/preprocessors/base.py", line 69, in preprocess
    nb.cells[index], resources = self.preprocess_cell(cell, resources, index)
  File "/home/joma.minoza/.local/lib/python3.8/site-packages/nbconvert/preprocessors/execute.py", line 378, in preprocess_cell
    raise CellExecutionError.from_cell_and_msg(cell, out)
nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:
------------------
simulation_model        = GeoSimulationEnvironment
center_coords           = [5.986803, 122.1695733]
locations               = ["BASILAN", "LANAO DEL SUR", "MAGUINDANAO", "SULU", "TAWI-TAWI"]
age_distributions       = [
                            1037200,   # 0 - 9 
                            931800,    # 10 - 19 
                            725000,    # 20 - 29 
                            629100,    # 30 - 39
                            453200,    # 40 - 49
                            296000,    # 50 - 59
                            173700,    # 60 - 69
                            68800,     # 70 - 79
                            15500      # 80 and up
                        ]

population              = [
                            385300,         # Basilan
                            1225700,        # Lanao Del Sur
                            1391100,        # Maguindanao
                            839500,         # Sulu
                            489100          # Tawi-Tawi
                        ]

vaccine_prioritization_weights = {
    "person_health_social_work":        [0.10, 0.32, 0.09, 0.37, 0.11],
    "person_prof_tech":                 [0.06, 0.37, 0.37, 0.12, 0.10],
    "person_admin_support":             [0.01, 0.75, 0.08, 0.10, 0.06],
    "person_education":                 [0.03, 0.77, 0.12, 0.04, 0.05],
    "person_agriculture":               [0.10, 0.75, 0.06, 0.06, 0.03],
    "elderly":                          [0.09, 0.28, 0.32, 0.19, 0.11],
    "social_household_4ps_active":      [0.066, 0.239, 0.306, 0.330, 0.059],
    "social_bayanihan_grant":           [0.08, 0.33, 0.31, 0.17, 0.11],
    "economics_tourists":               [0.1352, 0.1919, 0.3569, 0.0004, 0.3156],
    "economics_marine_fisheries":       [0.03, 0.23, 0.16, 0.13, 0.45],
    "economics_volume_fisheries":       [0.02, 0.02, 0.16, 0.36, 0.44],
    "economics_livestock_inventory":    [0.28, 0.31, 0.24, 0.10, 0.06],
    "economics_volume_corn":            [0.00009, 0.33832, 0.65840, 0.00129, 0.00189]
}

performance_factor       = 0.01
scale                    = 1000 * performance_factor  
vaccines_available       = 5000 / performance_factor # times scale (actual number for vaccine doses) 

data_manager            = DataManager(DATA_DROP_CSV_FILE, BARMM_DATA_LOC, "ProvRes", locations, age_distributions)
environment             = GeoSpaceEnvironment(simulation_model, BARMM_GEOJSON, "PROVINCE", locations, center_coords, population, data_manager, "ProvRes", vaccine_prioritization_weights, vaccines_available)
environment.scale       = scale

simulation_model.grid   = environment.get_geospace()
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mValueError[0m                                Traceback (most recent call last)
[0;32m<ipython-input-2-16db8b426ef1>[0m in [0;36m<module>[0;34m[0m
[1;32m     43[0m [0;34m[0m[0m
[1;32m     44[0m [0mdata_manager[0m            [0;34m=[0m [0mDataManager[0m[0;34m([0m[0mDATA_DROP_CSV_FILE[0m[0;34m,[0m [0mBARMM_DATA_LOC[0m[0;34m,[0m [0;34m"ProvRes"[0m[0;34m,[0m [0mlocations[0m[0;34m,[0m [0mage_distributions[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 45[0;31m [0menvironment[0m             [0;34m=[0m [0mGeoSpaceEnvironment[0m[0;34m([0m[0msimulation_model[0m[0;34m,[0m [0mBARMM_GEOJSON[0m[0;34m,[0m [0;34m"PROVINCE"[0m[0;34m,[0m [0mlocations[0m[0;34m,[0m [0mcenter_coords[0m[0;34m,[0m [0mpopulation[0m[0;34m,[0m [0mdata_manager[0m[0;34m,[0m [0;34m"ProvRes"[0m[0;34m,[0m [0mvaccine_prioritization_weights[0m[0;34m,[0m [0mvaccines_available[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     46[0m [0menvironment[0m[0;34m.[0m[0mscale[0m       [0;34m=[0m [0mscale[0m[0;34m[0m[0;34m[0m[0m
[1;32m     47[0m [0;34m[0m[0m

[0;32m/scratch1/scratch2/joma.minoza/Bangsamoro-ABM-COVID19-Vaccine-Distribution-Optimization/experiments/notebooks/../../abm/space/geospace/geo_space_environ.py[0m in [0;36m__init__[0;34m(self, model, geojson_file, geojson_feature_key, locations, center_coords, population, data_manager, location_filter, vaccine_prioritization_weights, vaccines_available, scale)[0m
[1;32m     51[0m         [0mself[0m[0;34m.[0m[0mpopulate_data[0m[0;34m([0m[0mself[0m[0;34m.[0m[0mget_data_source[0m[0;34m([0m[0;34m)[0m[0;34m,[0m [0mlocation_filter[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     52[0m [0;34m[0m[0m
[0;32m---> 53[0;31m         [0mself[0m[0;34m.[0m[0mupdate_mortality_rates[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     54[0m         [0mself[0m[0;34m.[0m[0mupdate_infection_rates[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     55[0m [0;34m[0m[0m

[0;32m/scratch1/scratch2/joma.minoza/Bangsamoro-ABM-COVID19-Vaccine-Distribution-Optimization/experiments/notebooks/../../abm/space/geospace/geo_space_environ.py[0m in [0;36mupdate_mortality_rates[0;34m(self)[0m
[1;32m    259[0m [0;34m[0m[0m
[1;32m    260[0m     [0;32mdef[0m [0mupdate_mortality_rates[0m[0;34m([0m[0mself[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 261[0;31m         [0mself[0m[0;34m.[0m[0mmortality_rates[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mdata_manager[0m[0;34m.[0m[0mupdate_mortality_rate[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    262[0m         [0;32mreturn[0m [0;32mTrue[0m[0;34m[0m[0;34m[0m[0m
[1;32m    263[0m [0;34m[0m[0m

[0;32m/scratch1/scratch2/joma.minoza/Bangsamoro-ABM-COVID19-Vaccine-Distribution-Optimization/experiments/notebooks/../../abm/utils/modules/data_manager.py[0m in [0;36mupdate_mortality_rate[0;34m(self)[0m
[1;32m     71[0m     [0;32mdef[0m [0mupdate_mortality_rate[0m[0;34m([0m[0mself[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     72[0m [0;34m[0m[0m
[0;32m---> 73[0;31m         [0mcase_fatality_age_group[0m [0;34m=[0m [0mcase_fatality_age_group_values[0m[0;34m([0m[0mself[0m[0;34m.[0m[0mdata[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     74[0m [0;34m[0m[0m
[1;32m     75[0m         [0mmortality_rates[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0minput_parameters[0m[0;34m[[0m[0;34m"MORTALITY_RATE"[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m

[0;32m/scratch1/scratch2/joma.minoza/Bangsamoro-ABM-COVID19-Vaccine-Distribution-Optimization/experiments/notebooks/../../abm/utils/modules/age_group_extractor.py[0m in [0;36mcase_fatality_age_group_values[0;34m(data)[0m
[1;32m     55[0m [0;32mdef[0m [0mcase_fatality_age_group_values[0m[0;34m([0m[0mdata[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     56[0m [0;34m[0m[0m
[0;32m---> 57[0;31m     [0minfected_df[0m          [0;34m=[0m [0mage_group_extractor[0m[0;34m([0m[0mdata[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     58[0m [0;34m[0m[0m
[1;32m     59[0m     [0mmortality_df[0m         [0;34m=[0m [0minfected_df[0m [0;34m*[0m [0;36m0[0m[0;34m[0m[0;34m[0m[0m

[0;32m/scratch1/scratch2/joma.minoza/Bangsamoro-ABM-COVID19-Vaccine-Distribution-Optimization/experiments/notebooks/../../abm/utils/modules/age_group_extractor.py[0m in [0;36mage_group_extractor[0;34m(data)[0m
[1;32m     10[0m     })
[1;32m     11[0m [0;34m[0m[0m
[0;32m---> 12[0;31m     [0mdf[0m[0;34m.[0m[0mindex[0m [0;34m=[0m [0midx[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     13[0m     [0mdf[0m[0;34m.[0m[0msort_index[0m[0;34m([0m[0minplace[0m[0;34m=[0m[0;32mTrue[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     14[0m     [0mdf[0m[0;34m.[0m[0mindex[0m [0;34m=[0m [0mx[0m[0;34m.[0m[0mindex[0m[0;34m[[0m[0mnp[0m[0;34m.[0m[0margsort[0m[0;34m([0m[0midx[0m[0;34m)[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m

[0;32m~/.local/lib/python3.8/site-packages/pandas/core/generic.py[0m in [0;36m__setattr__[0;34m(self, name, value)[0m
[1;32m   5078[0m         [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m   5079[0m             [0mobject[0m[0;34m.[0m[0m__getattribute__[0m[0;34m([0m[0mself[0m[0;34m,[0m [0mname[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 5080[0;31m             [0;32mreturn[0m [0mobject[0m[0;34m.[0m[0m__setattr__[0m[0;34m([0m[0mself[0m[0;34m,[0m [0mname[0m[0;34m,[0m [0mvalue[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   5081[0m         [0;32mexcept[0m [0mAttributeError[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m   5082[0m             [0;32mpass[0m[0;34m[0m[0;34m[0m[0m

[0;32mpandas/_libs/properties.pyx[0m in [0;36mpandas._libs.properties.AxisProperty.__set__[0;34m()[0m

[0;32m~/.local/lib/python3.8/site-packages/pandas/core/generic.py[0m in [0;36m_set_axis[0;34m(self, axis, labels)[0m
[1;32m    636[0m [0;34m[0m[0m
[1;32m    637[0m     [0;32mdef[0m [0m_set_axis[0m[0;34m([0m[0mself[0m[0;34m,[0m [0maxis[0m[0;34m,[0m [0mlabels[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 638[0;31m         [0mself[0m[0;34m.[0m[0m_data[0m[0;34m.[0m[0mset_axis[0m[0;34m([0m[0maxis[0m[0;34m,[0m [0mlabels[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    639[0m         [0mself[0m[0;34m.[0m[0m_clear_item_cache[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    640[0m [0;34m[0m[0m

[0;32m~/.local/lib/python3.8/site-packages/pandas/core/internals/managers.py[0m in [0;36mset_axis[0;34m(self, axis, new_labels)[0m
[1;32m    151[0m [0;34m[0m[0m
[1;32m    152[0m         [0;32mif[0m [0mnew_len[0m [0;34m!=[0m [0mold_len[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 153[0;31m             raise ValueError(
[0m[1;32m    154[0m                 [0;34m'Length mismatch: Expected axis has {old} elements, new '[0m[0;34m[0m[0;34m[0m[0m
[1;32m    155[0m                 'values have {new} elements'.format(old=old_len, new=new_len))

[0;31mValueError[0m: Length mismatch: Expected axis has 14 elements, new values have 17 elements
ValueError: Length mismatch: Expected axis has 14 elements, new values have 17 elements

srun: error: saliksik-cpu-23: task 0: Exited with exit code 1
[NbConvertApp] Converting notebook experiments/notebooks/Sensitivity Analysis on Vaccination with Social Prioritization.ipynb to notebook
[NbConvertApp] Executing notebook with kernel: python3
[NbConvertApp] ERROR | Error while converting 'experiments/notebooks/Sensitivity Analysis on Vaccination with Social Prioritization.ipynb'
Traceback (most recent call last):
  File "/home/joma.minoza/.local/lib/python3.8/site-packages/nbconvert/nbconvertapp.py", line 407, in export_single_notebook
    output, resources = self.exporter.from_filename(notebook_filename, resources=resources)
  File "/home/joma.minoza/.local/lib/python3.8/site-packages/nbconvert/exporters/exporter.py", line 178, in from_filename
    return self.from_file(f, resources=resources, **kw)
  File "/home/joma.minoza/.local/lib/python3.8/site-packages/nbconvert/exporters/exporter.py", line 196, in from_file
    return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw)
  File "/home/joma.minoza/.local/lib/python3.8/site-packages/nbconvert/exporters/notebook.py", line 32, in from_notebook_node
    nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw)
  File "/home/joma.minoza/.local/lib/python3.8/site-packages/nbconvert/exporters/exporter.py", line 138, in from_notebook_node
    nb_copy, resources = self._preprocess(nb_copy, resources)
  File "/home/joma.minoza/.local/lib/python3.8/site-packages/nbconvert/exporters/exporter.py", line 315, in _preprocess
    nbc, resc = preprocessor(nbc, resc)
  File "/home/joma.minoza/.local/lib/python3.8/site-packages/nbconvert/preprocessors/base.py", line 47, in __call__
    return self.preprocess(nb, resources)
  File "/home/joma.minoza/.local/lib/python3.8/site-packages/nbconvert/preprocessors/execute.py", line 354, in preprocess
    nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources)
  File "/home/joma.minoza/.local/lib/python3.8/site-packages/nbconvert/preprocessors/base.py", line 69, in preprocess
    nb.cells[index], resources = self.preprocess_cell(cell, resources, index)
  File "/home/joma.minoza/.local/lib/python3.8/site-packages/nbconvert/preprocessors/execute.py", line 378, in preprocess_cell
    raise CellExecutionError.from_cell_and_msg(cell, out)
nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:
------------------
simulation_model        = GeoSimulationEnvironment
center_coords           = [5.986803, 122.1695733]
locations               = ["BASILAN", "LANAO DEL SUR", "MAGUINDANAO", "SULU", "TAWI-TAWI"]
age_distributions       = [
                            1037200,   # 0 - 9 
                            931800,    # 10 - 19 
                            725000,    # 20 - 29 
                            629100,    # 30 - 39
                            453200,    # 40 - 49
                            296000,    # 50 - 59
                            173700,    # 60 - 69
                            68800,     # 70 - 79
                            15500      # 80 and up
                        ]

population              = [
                            385300,         # Basilan
                            1225700,        # Lanao Del Sur
                            1391100,        # Maguindanao
                            839500,         # Sulu
                            489100          # Tawi-Tawi
                        ]

vaccine_prioritization_weights = {
    "person_health_social_work":        [0.10, 0.32, 0.09, 0.37, 0.11],
    "person_prof_tech":                 [0.06, 0.37, 0.37, 0.12, 0.10],
    "person_admin_support":             [0.01, 0.75, 0.08, 0.10, 0.06],
    "person_education":                 [0.03, 0.77, 0.12, 0.04, 0.05],
    "person_agriculture":               [0.10, 0.75, 0.06, 0.06, 0.03],
    "elderly":                          [0.09, 0.28, 0.32, 0.19, 0.11],
    "social_household_4ps_active":      [0.066, 0.239, 0.306, 0.330, 0.059],
    "social_bayanihan_grant":           [0.08, 0.33, 0.31, 0.17, 0.11],
    "economics_tourists":               [0.1352, 0.1919, 0.3569, 0.0004, 0.3156],
    "economics_marine_fisheries":       [0.03, 0.23, 0.16, 0.13, 0.45],
    "economics_volume_fisheries":       [0.02, 0.02, 0.16, 0.36, 0.44],
    "economics_livestock_inventory":    [0.28, 0.31, 0.24, 0.10, 0.06],
    "economics_volume_corn":            [0.00009, 0.33832, 0.65840, 0.00129, 0.00189]
}

performance_factor       = 0.01
scale                    = 1000 * performance_factor  
vaccines_available       = 5000 / performance_factor # times scale (actual number for vaccine doses) 

data_manager            = DataManager(DATA_DROP_CSV_FILE, BARMM_DATA_LOC, "ProvRes", locations, age_distributions)
environment             = GeoSpaceEnvironment(simulation_model, BARMM_GEOJSON, "PROVINCE", locations, center_coords, population, data_manager, "ProvRes", vaccine_prioritization_weights, vaccines_available)
environment.scale       = scale

simulation_model.grid   = environment.get_geospace()
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mValueError[0m                                Traceback (most recent call last)
[0;32m<ipython-input-2-16db8b426ef1>[0m in [0;36m<module>[0;34m[0m
[1;32m     43[0m [0;34m[0m[0m
[1;32m     44[0m [0mdata_manager[0m            [0;34m=[0m [0mDataManager[0m[0;34m([0m[0mDATA_DROP_CSV_FILE[0m[0;34m,[0m [0mBARMM_DATA_LOC[0m[0;34m,[0m [0;34m"ProvRes"[0m[0;34m,[0m [0mlocations[0m[0;34m,[0m [0mage_distributions[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 45[0;31m [0menvironment[0m             [0;34m=[0m [0mGeoSpaceEnvironment[0m[0;34m([0m[0msimulation_model[0m[0;34m,[0m [0mBARMM_GEOJSON[0m[0;34m,[0m [0;34m"PROVINCE"[0m[0;34m,[0m [0mlocations[0m[0;34m,[0m [0mcenter_coords[0m[0;34m,[0m [0mpopulation[0m[0;34m,[0m [0mdata_manager[0m[0;34m,[0m [0;34m"ProvRes"[0m[0;34m,[0m [0mvaccine_prioritization_weights[0m[0;34m,[0m [0mvaccines_available[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     46[0m [0menvironment[0m[0;34m.[0m[0mscale[0m       [0;34m=[0m [0mscale[0m[0;34m[0m[0;34m[0m[0m
[1;32m     47[0m [0;34m[0m[0m

[0;32m/scratch1/scratch2/joma.minoza/Bangsamoro-ABM-COVID19-Vaccine-Distribution-Optimization/experiments/notebooks/../../abm/space/geospace/geo_space_environ.py[0m in [0;36m__init__[0;34m(self, model, geojson_file, geojson_feature_key, locations, center_coords, population, data_manager, location_filter, vaccine_prioritization_weights, vaccines_available, scale)[0m
[1;32m     51[0m         [0mself[0m[0;34m.[0m[0mpopulate_data[0m[0;34m([0m[0mself[0m[0;34m.[0m[0mget_data_source[0m[0;34m([0m[0;34m)[0m[0;34m,[0m [0mlocation_filter[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     52[0m [0;34m[0m[0m
[0;32m---> 53[0;31m         [0mself[0m[0;34m.[0m[0mupdate_mortality_rates[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     54[0m         [0mself[0m[0;34m.[0m[0mupdate_infection_rates[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     55[0m [0;34m[0m[0m

[0;32m/scratch1/scratch2/joma.minoza/Bangsamoro-ABM-COVID19-Vaccine-Distribution-Optimization/experiments/notebooks/../../abm/space/geospace/geo_space_environ.py[0m in [0;36mupdate_mortality_rates[0;34m(self)[0m
[1;32m    259[0m [0;34m[0m[0m
[1;32m    260[0m     [0;32mdef[0m [0mupdate_mortality_rates[0m[0;34m([0m[0mself[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 261[0;31m         [0mself[0m[0;34m.[0m[0mmortality_rates[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mdata_manager[0m[0;34m.[0m[0mupdate_mortality_rate[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    262[0m         [0;32mreturn[0m [0;32mTrue[0m[0;34m[0m[0;34m[0m[0m
[1;32m    263[0m [0;34m[0m[0m

[0;32m/scratch1/scratch2/joma.minoza/Bangsamoro-ABM-COVID19-Vaccine-Distribution-Optimization/experiments/notebooks/../../abm/utils/modules/data_manager.py[0m in [0;36mupdate_mortality_rate[0;34m(self)[0m
[1;32m     71[0m     [0;32mdef[0m [0mupdate_mortality_rate[0m[0;34m([0m[0mself[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     72[0m [0;34m[0m[0m
[0;32m---> 73[0;31m         [0mcase_fatality_age_group[0m [0;34m=[0m [0mcase_fatality_age_group_values[0m[0;34m([0m[0mself[0m[0;34m.[0m[0mdata[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     74[0m [0;34m[0m[0m
[1;32m     75[0m         [0mmortality_rates[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0minput_parameters[0m[0;34m[[0m[0;34m"MORTALITY_RATE"[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m

[0;32m/scratch1/scratch2/joma.minoza/Bangsamoro-ABM-COVID19-Vaccine-Distribution-Optimization/experiments/notebooks/../../abm/utils/modules/age_group_extractor.py[0m in [0;36mcase_fatality_age_group_values[0;34m(data)[0m
[1;32m     55[0m [0;32mdef[0m [0mcase_fatality_age_group_values[0m[0;34m([0m[0mdata[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     56[0m [0;34m[0m[0m
[0;32m---> 57[0;31m     [0minfected_df[0m          [0;34m=[0m [0mage_group_extractor[0m[0;34m([0m[0mdata[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     58[0m [0;34m[0m[0m
[1;32m     59[0m     [0mmortality_df[0m         [0;34m=[0m [0minfected_df[0m [0;34m*[0m [0;36m0[0m[0;34m[0m[0;34m[0m[0m

[0;32m/scratch1/scratch2/joma.minoza/Bangsamoro-ABM-COVID19-Vaccine-Distribution-Optimization/experiments/notebooks/../../abm/utils/modules/age_group_extractor.py[0m in [0;36mage_group_extractor[0;34m(data)[0m
[1;32m     10[0m     })
[1;32m     11[0m [0;34m[0m[0m
[0;32m---> 12[0;31m     [0mdf[0m[0;34m.[0m[0mindex[0m [0;34m=[0m [0midx[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     13[0m     [0mdf[0m[0;34m.[0m[0msort_index[0m[0;34m([0m[0minplace[0m[0;34m=[0m[0;32mTrue[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     14[0m     [0mdf[0m[0;34m.[0m[0mindex[0m [0;34m=[0m [0mx[0m[0;34m.[0m[0mindex[0m[0;34m[[0m[0mnp[0m[0;34m.[0m[0margsort[0m[0;34m([0m[0midx[0m[0;34m)[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m

[0;32m~/.local/lib/python3.8/site-packages/pandas/core/generic.py[0m in [0;36m__setattr__[0;34m(self, name, value)[0m
[1;32m   5078[0m         [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m   5079[0m             [0mobject[0m[0;34m.[0m[0m__getattribute__[0m[0;34m([0m[0mself[0m[0;34m,[0m [0mname[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 5080[0;31m             [0;32mreturn[0m [0mobject[0m[0;34m.[0m[0m__setattr__[0m[0;34m([0m[0mself[0m[0;34m,[0m [0mname[0m[0;34m,[0m [0mvalue[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   5081[0m         [0;32mexcept[0m [0mAttributeError[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m   5082[0m             [0;32mpass[0m[0;34m[0m[0;34m[0m[0m

[0;32mpandas/_libs/properties.pyx[0m in [0;36mpandas._libs.properties.AxisProperty.__set__[0;34m()[0m

[0;32m~/.local/lib/python3.8/site-packages/pandas/core/generic.py[0m in [0;36m_set_axis[0;34m(self, axis, labels)[0m
[1;32m    636[0m [0;34m[0m[0m
[1;32m    637[0m     [0;32mdef[0m [0m_set_axis[0m[0;34m([0m[0mself[0m[0;34m,[0m [0maxis[0m[0;34m,[0m [0mlabels[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 638[0;31m         [0mself[0m[0;34m.[0m[0m_data[0m[0;34m.[0m[0mset_axis[0m[0;34m([0m[0maxis[0m[0;34m,[0m [0mlabels[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    639[0m         [0mself[0m[0;34m.[0m[0m_clear_item_cache[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    640[0m [0;34m[0m[0m

[0;32m~/.local/lib/python3.8/site-packages/pandas/core/internals/managers.py[0m in [0;36mset_axis[0;34m(self, axis, new_labels)[0m
[1;32m    151[0m [0;34m[0m[0m
[1;32m    152[0m         [0;32mif[0m [0mnew_len[0m [0;34m!=[0m [0mold_len[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 153[0;31m             raise ValueError(
[0m[1;32m    154[0m                 [0;34m'Length mismatch: Expected axis has {old} elements, new '[0m[0;34m[0m[0;34m[0m[0m
[1;32m    155[0m                 'values have {new} elements'.format(old=old_len, new=new_len))

[0;31mValueError[0m: Length mismatch: Expected axis has 14 elements, new values have 17 elements
ValueError: Length mismatch: Expected axis has 14 elements, new values have 17 elements

srun: error: saliksik-cpu-23: task 0: Exited with exit code 1
[NbConvertApp] WARNING | pattern 'experiments/notebooks/Sensitivity Analysis on Vaccination with All Prioritizations.ipynb ' matched no files
srun: error: saliksik-cpu-23: task 0: Exited with exit code 255
